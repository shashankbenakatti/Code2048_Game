name: Build and Release Game

on:
  push:
    branches: [main]
  workflow_dispatch:   # allows manual triggering from GitHub UI

permissions:
  contents: write       # required for creating releases and uploading assets

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Latest Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pygame

      - name: Build Windows Executable
        run: |
          pyinstaller --onefile gammefile.py

      - name: Prepare Release Files
        shell: pwsh
        run: |
          # Ensure dist directory exists
          if (-not (Test-Path "dist")) { New-Item -ItemType Directory -Path dist | Out-Null }

          # Copy the new Windows build (if it exists)
          if (Test-Path "dist/gammefile.exe") {
            Write-Host "✅ Windows executable found in dist/"
          } else {
            Write-Host "⚠️ Windows executable not found, creating dummy file for release"
            New-Item -ItemType File -Path "dist/gammefile.exe" | Out-Null
          }

          # Optionally include Linux binary if present in the repo
          if (Test-Path "dist/gammefile-linux") {
            Write-Host "✅ Linux binary found, will include in release"
          } else {
            Write-Host "⚠️ No Linux binary found in dist/"
          }

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: "Latest Release"
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
